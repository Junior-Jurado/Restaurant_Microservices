version: '3.7'

services:
    app:
      image: app_restaurant:v1
      container_name: app_restaurant
      build:
        context: ./api-gateway
        dockerfile: Dockerfile
      env_file: .env
      ports:
        - 80:3000
      depends_on:
        - mongodb
        - rabbitmq
      restart: always
      networks:
        - ms_nestjs

    microservice_ingredients:
      image: microservice-ingredients:v1
      container_name: microservice-ingredients
      build:
        context: ./microservice-ingredients
        dockerfile: Dockerfile
      env_file: .env
      depends_on:
        - mongodb
        - rabbitmq
      restart: always
      networks:
        - ms_nestjs
    
    microservice_recipes:
      image: microservice-recipes:v1
      container_name: microservice-recipes
      build:
        context: ./microservice-recipes
        dockerfile: Dockerfile
      env_file: .env
      depends_on:
        - mongodb
        - rabbitmq
      restart: always
      networks:
        - ms_nestjs
    
    microservice_orders:
      image: microservice-orders:v1
      container_name: microservice-orders
      build:
        context: ./microservice-orders
        dockerfile: Dockerfile
      env_file: .env
      depends_on:
        - mongodb
        - rabbitmq
      restart: always
      networks:
        - ms_nestjs
      
    rabbitmq:
          image: rabbitmq:3-management
          container_name: rmq
          expose: 
            - 5672
            - 15672
          restart: always
          networks:
              - ms_nestjs
    
    mongodb:
        image: mongo:latest
        container_name: mongodb
        restart: always
        environment:
              - MONGO_DATA_DIR=/data/db
              - MONGO_LOG_DIR=/dev/null
        volumes:
              - mongodb:/data/db
        expose:
              - 27017
        networks:
              - ms_nestjs

volumes:
    mongodb:

networks:
    ms_nestjs: